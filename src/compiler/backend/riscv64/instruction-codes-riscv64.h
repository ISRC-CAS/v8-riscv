// Copyright 2014 the V8 project authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

#ifndef V8_COMPILER_BACKEND_RISCV64_INSTRUCTION_CODES_RISCV64_H_
#define V8_COMPILER_BACKEND_RISCV64_INSTRUCTION_CODES_RISCV64_H_

namespace v8 {
namespace internal {
namespace compiler {

// RISCV64-specific opcodes that specify which assembly sequence to emit.
// Most opcodes specify a single instruction.
#define TARGET_ARCH_OPCODE_LIST(V)            \
  V(RISCV64Add)                               \
  V(RISCV64Add32)                             \
  V(RISCV64AddOvf)                            \
  V(RISCV64Sub)                               \
  V(RISCV64Sub32)                             \
  V(RISCV64SubOvf)                            \
  V(RISCV64Mul)                               \
  V(RISCV64Mul32)                             \
  V(RISCV64MulOvf)                            \
  V(RISCV64MulHigh)                           \
  V(RISCV64MulHigh32)                         \
  V(RISCV64MulHighU)                          \
  V(RISCV64MulHighU32)                        \
  V(RISCV64Div)                               \
  V(RISCV64Div32)                             \
  V(RISCV64DivU)                              \
  V(RISCV64DivU32)                            \
  V(RISCV64Mod)                               \
  V(RISCV64Mod32)                             \
  V(RISCV64ModU)                              \
  V(RISCV64ModU32)                            \
  V(RISCV64And)                               \
  V(RISCV64Or)                                \
  V(RISCV64Nor)                               \
  V(RISCV64Xor)                               \
  V(RISCV64Clz)                               \
  V(RISCV64Ctz)                               \
  V(RISCV64Popcnt)                            \
  V(RISCV64Lsa)                               \
  V(RISCV64Sll)                               \
  V(RISCV64Srl)                               \
  V(RISCV64Sra)                               \
  V(RISCV64Sll32)                             \
  V(RISCV64Srl32)                             \
  V(RISCV64Sra32)                             \
  V(RISCV64Ext)                               \
  V(RISCV64Ins)                               \
  V(RISCV64Ror)                               \
  V(RISCV64Mov)                               \
  V(RISCV64Cmp)                               \
  V(RISCV64CmpS)                              \
  V(RISCV64AddS)                              \
  V(RISCV64SubS)                              \
  V(RISCV64MulS)                              \
  V(RISCV64DivS)                              \
  V(RISCV64ModS)                              \
  V(RISCV64AbsS)                              \
  V(RISCV64SqrtS)                             \
  V(RISCV64MaxS)                              \
  V(RISCV64MinS)                              \
  V(RISCV64CmpD)                              \
  V(RISCV64AddD)                              \
  V(RISCV64SubD)                              \
  V(RISCV64MulD)                              \
  V(RISCV64DivD)                              \
  V(RISCV64ModD)                              \
  V(RISCV64AbsD)                              \
  V(RISCV64SqrtD)                             \
  V(RISCV64MaxD)                              \
  V(RISCV64MinD)                              \
  V(RISCV64NegS)                              \
  V(RISCV64NegD)                              \
  V(RISCV64AddPair)                           \
  V(RISCV64SubPair)                           \
  V(RISCV64MulPair)                           \
  V(RISCV64MaddS)                             \
  V(RISCV64MaddD)                             \
  V(RISCV64MsubS)                             \
  V(RISCV64MsubD)                             \
  V(RISCV64Float32RoundDown)                  \
  V(RISCV64Float32RoundTruncate)              \
  V(RISCV64Float32RoundUp)                    \
  V(RISCV64Float32RoundTiesEven)              \
  V(RISCV64Float64RoundDown)                  \
  V(RISCV64Float64RoundTruncate)              \
  V(RISCV64Float64RoundUp)                    \
  V(RISCV64Float64RoundTiesEven)              \
  V(RISCV64CvtSD)                             \
  V(RISCV64CvtDS)                             \
  V(RISCV64TruncWD)                           \
  V(RISCV64RoundWD)                           \
  V(RISCV64FloorWD)                           \
  V(RISCV64CeilWD)                            \
  V(RISCV64TruncWS)                           \
  V(RISCV64RoundWS)                           \
  V(RISCV64FloorWS)                           \
  V(RISCV64CeilWS)                            \
  V(RISCV64TruncUwD)                          \
  V(RISCV64TruncUwS)                          \
  V(RISCV64CvtDW)                             \
  V(RISCV64CvtDUw)                            \
  V(RISCV64FcvtUwD)                           \
  V(RISCV64FcvtUwS)                           \
  V(RISCV64FcvtLS)                            \
  V(RISCV64FcvtUlS)                           \
  V(RISCV64FcvtSW)                            \
  V(RISCV64FcvtSUw)                           \
  V(RISCV64FcvtSUl)                           \
  V(RISCV64FcvtSL)                            \
  V(RISCV64FcvtSD)                            \
  V(RISCV64FcvtLD)                            \
  V(RISCV64FcvtUlD)                           \
  V(RISCV64FcvtDL)                            \
  V(RISCV64FcvtDS)                            \
  V(RISCV64FcvtDW)                            \
  V(RISCV64FcvtDWu)                           \
  V(RISCV64FcvtDUl)                           \
  V(RISCV64FcvtWD)                            \
  V(RISCV64FcvtWS)                            \
  V(RISCV64FMVWX)                             \
  V(RISCV64FMVXW)                             \
  V(RISCV64FMVDX)                             \
  V(RISCV64FMVXD)                             \
  V(RISCV64Lb)                                \
  V(RISCV64Lbu)                               \
  V(RISCV64Sb)                                \
  V(RISCV64Lh)                                \
  V(RISCV64Ulh)                               \
  V(RISCV64Lhu)                               \
  V(RISCV64Ulhu)                              \
  V(RISCV64Sh)                                \
  V(RISCV64Ush)                               \
  V(RISCV64Lw)                                \
  V(RISCV64Lwu)                               \
  V(RISCV64Ld)                                \
  V(RISCV64Ulw)                               \
  V(RISCV64Sw)                                \
  V(RISCV64Sd)                                \
  V(RISCV64Usw)                               \
  V(RISCV64flw)                               \
  V(RISCV64Ulwc1)                             \
  V(RISCV64fsw)                               \
  V(RISCV64Uswc1)                             \
  V(RISCV64fld)                               \
  V(RISCV64Uldc1)                             \
  V(RISCV64fsd)                               \
  V(RISCV64Usdc1)                             \
  V(RISCV64Float64ExtractLowWord32)           \
  V(RISCV64Float64ExtractHighWord32)          \
  V(RISCV64Float64InsertLowWord32)            \
  V(RISCV64Float64InsertHighWord32)           \
  V(RISCV64Float64SilenceNaN)                 \
  V(RISCV64Float32Max)                        \
  V(RISCV64Float64Max)                        \
  V(RISCV64Float32Min)                        \
  V(RISCV64Float64Min)                        \
  V(RISCV64Push)                              \
  V(RISCV64Peek)                              \
  V(RISCV64StoreToStackSlot)                  \
  V(RISCV64ByteSwap32)                        \
  V(RISCV64StackClaim)                        \
  V(RISCV64Seb)                               \
  V(RISCV64Seh)                               \
  V(RISCV64Sync)                              \
  V(RISCV64S128Zero)                          \
  V(RISCV64I32x4Splat)                        \
  V(RISCV64I32x4ExtractLane)                  \
  V(RISCV64I32x4ReplaceLane)                  \
  V(RISCV64I32x4Add)                          \
  V(RISCV64I32x4AddHoriz)                     \
  V(RISCV64I32x4Sub)                          \
  V(RISCV64F64x2Abs)                          \
  V(RISCV64F64x2Neg)                          \
  V(RISCV64F64x2Sqrt)                         \
  V(RISCV64F64x2Add)                          \
  V(RISCV64F64x2Sub)                          \
  V(RISCV64F64x2Mul)                          \
  V(RISCV64F64x2Div)                          \
  V(RISCV64F64x2Min)                          \
  V(RISCV64F64x2Max)                          \
  V(RISCV64F64x2Eq)                           \
  V(RISCV64F64x2Ne)                           \
  V(RISCV64F64x2Lt)                           \
  V(RISCV64F64x2Le)                           \
  V(RISCV64I64x2Add)                          \
  V(RISCV64I64x2Sub)                          \
  V(RISCV64I64x2Neg)                          \
  V(RISCV64I64x2Shl)                          \
  V(RISCV64I64x2ShrS)                         \
  V(RISCV64I64x2ShrU)                         \
  V(RISCV64F32x4Splat)                        \
  V(RISCV64F32x4ExtractLane)                  \
  V(RISCV64F32x4ReplaceLane)                  \
  V(RISCV64F32x4SConvertI32x4)                \
  V(RISCV64F32x4UConvertI32x4)                \
  V(RISCV64I32x4Mul)                          \
  V(RISCV64I32x4MaxS)                         \
  V(RISCV64I32x4MinS)                         \
  V(RISCV64I32x4Eq)                           \
  V(RISCV64I32x4Ne)                           \
  V(RISCV64I32x4Shl)                          \
  V(RISCV64I32x4ShrS)                         \
  V(RISCV64I32x4ShrU)                         \
  V(RISCV64I32x4MaxU)                         \
  V(RISCV64I32x4MinU)                         \
  V(RISCV64F64x2Splat)                        \
  V(RISCV64F64x2ExtractLane)                  \
  V(RISCV64F64x2ReplaceLane)                  \
  V(RISCV64F32x4Abs)                          \
  V(RISCV64F32x4Neg)                          \
  V(RISCV64F32x4Sqrt)                         \
  V(RISCV64F32x4RecipApprox)                  \
  V(RISCV64F32x4RecipSqrtApprox)              \
  V(RISCV64F32x4Add)                          \
  V(RISCV64F32x4AddHoriz)                     \
  V(RISCV64F32x4Sub)                          \
  V(RISCV64F32x4Mul)                          \
  V(RISCV64F32x4Div)                          \
  V(RISCV64F32x4Max)                          \
  V(RISCV64F32x4Min)                          \
  V(RISCV64F32x4Eq)                           \
  V(RISCV64F32x4Ne)                           \
  V(RISCV64F32x4Lt)                           \
  V(RISCV64F32x4Le)                           \
  V(RISCV64I32x4SConvertF32x4)                \
  V(RISCV64I32x4UConvertF32x4)                \
  V(RISCV64I32x4Neg)                          \
  V(RISCV64I32x4GtS)                          \
  V(RISCV64I32x4GeS)                          \
  V(RISCV64I32x4GtU)                          \
  V(RISCV64I32x4GeU)                          \
  V(RISCV64I16x8Splat)                        \
  V(RISCV64I16x8ExtractLaneU)                 \
  V(RISCV64I16x8ExtractLaneS)                 \
  V(RISCV64I16x8ReplaceLane)                  \
  V(RISCV64I16x8Neg)                          \
  V(RISCV64I16x8Shl)                          \
  V(RISCV64I16x8ShrS)                         \
  V(RISCV64I16x8ShrU)                         \
  V(RISCV64I16x8Add)                          \
  V(RISCV64I16x8AddSaturateS)                 \
  V(RISCV64I16x8AddHoriz)                     \
  V(RISCV64I16x8Sub)                          \
  V(RISCV64I16x8SubSaturateS)                 \
  V(RISCV64I16x8Mul)                          \
  V(RISCV64I16x8MaxS)                         \
  V(RISCV64I16x8MinS)                         \
  V(RISCV64I16x8Eq)                           \
  V(RISCV64I16x8Ne)                           \
  V(RISCV64I16x8GtS)                          \
  V(RISCV64I16x8GeS)                          \
  V(RISCV64I16x8AddSaturateU)                 \
  V(RISCV64I16x8SubSaturateU)                 \
  V(RISCV64I16x8MaxU)                         \
  V(RISCV64I16x8MinU)                         \
  V(RISCV64I16x8GtU)                          \
  V(RISCV64I16x8GeU)                          \
  V(RISCV64I16x8RoundingAverageU)             \
  V(RISCV64I8x16Splat)                        \
  V(RISCV64I8x16ExtractLaneU)                 \
  V(RISCV64I8x16ExtractLaneS)                 \
  V(RISCV64I8x16ReplaceLane)                  \
  V(RISCV64I8x16Neg)                          \
  V(RISCV64I8x16Shl)                          \
  V(RISCV64I8x16ShrS)                         \
  V(RISCV64I8x16Add)                          \
  V(RISCV64I8x16AddSaturateS)                 \
  V(RISCV64I8x16Sub)                          \
  V(RISCV64I8x16SubSaturateS)                 \
  V(RISCV64I8x16Mul)                          \
  V(RISCV64I8x16MaxS)                         \
  V(RISCV64I8x16MinS)                         \
  V(RISCV64I8x16Eq)                           \
  V(RISCV64I8x16Ne)                           \
  V(RISCV64I8x16GtS)                          \
  V(RISCV64I8x16GeS)                          \
  V(RISCV64I8x16ShrU)                         \
  V(RISCV64I8x16AddSaturateU)                 \
  V(RISCV64I8x16SubSaturateU)                 \
  V(RISCV64I8x16MaxU)                         \
  V(RISCV64I8x16MinU)                         \
  V(RISCV64I8x16GtU)                          \
  V(RISCV64I8x16GeU)                          \
  V(RISCV64I8x16RoundingAverageU)             \
  V(RISCV64S128And)                           \
  V(RISCV64S128Or)                            \
  V(RISCV64S128Xor)                           \
  V(RISCV64S128Not)                           \
  V(RISCV64S128Select)                        \
  V(RISCV64S1x4AnyTrue)                       \
  V(RISCV64S1x4AllTrue)                       \
  V(RISCV64S1x8AnyTrue)                       \
  V(RISCV64S1x8AllTrue)                       \
  V(RISCV64S1x16AnyTrue)                      \
  V(RISCV64S1x16AllTrue)                      \
  V(RISCV64S32x4InterleaveRight)              \
  V(RISCV64S32x4InterleaveLeft)               \
  V(RISCV64S32x4PackEven)                     \
  V(RISCV64S32x4PackOdd)                      \
  V(RISCV64S32x4InterleaveEven)               \
  V(RISCV64S32x4InterleaveOdd)                \
  V(RISCV64S32x4Shuffle)                      \
  V(RISCV64S16x8InterleaveRight)              \
  V(RISCV64S16x8InterleaveLeft)               \
  V(RISCV64S16x8PackEven)                     \
  V(RISCV64S16x8PackOdd)                      \
  V(RISCV64S16x8InterleaveEven)               \
  V(RISCV64S16x8InterleaveOdd)                \
  V(RISCV64S16x4Reverse)                      \
  V(RISCV64S16x2Reverse)                      \
  V(RISCV64S8x16InterleaveRight)              \
  V(RISCV64S8x16InterleaveLeft)               \
  V(RISCV64S8x16PackEven)                     \
  V(RISCV64S8x16PackOdd)                      \
  V(RISCV64S8x16InterleaveEven)               \
  V(RISCV64S8x16InterleaveOdd)                \
  V(RISCV64S8x16Shuffle)                      \
  V(RISCV64S8x16Swizzle)                      \
  V(RISCV64S8x16Concat)                       \
  V(RISCV64S8x8Reverse)                       \
  V(RISCV64S8x4Reverse)                       \
  V(RISCV64S8x2Reverse)                       \
  V(RISCV64MsaLd)                             \
  V(RISCV64MsaSt)                             \
  V(RISCV64I32x4SConvertI16x8Low)             \
  V(RISCV64I32x4SConvertI16x8High)            \
  V(RISCV64I32x4UConvertI16x8Low)             \
  V(RISCV64I32x4UConvertI16x8High)            \
  V(RISCV64I16x8SConvertI8x16Low)             \
  V(RISCV64I16x8SConvertI8x16High)            \
  V(RISCV64I16x8SConvertI32x4)                \
  V(RISCV64I16x8UConvertI32x4)                \
  V(RISCV64I16x8UConvertI8x16Low)             \
  V(RISCV64I16x8UConvertI8x16High)            \
  V(RISCV64I8x16SConvertI16x8)                \
  V(RISCV64I8x16UConvertI16x8)                \
  V(RISCV64Word64AtomicLoadUint8)             \
  V(RISCV64Word64AtomicLoadUint16)            \
  V(RISCV64Word64AtomicLoadUint32)            \
  V(RISCV64Word64AtomicLoadUint64)            \
  V(RISCV64Word64AtomicStoreWord8)            \
  V(RISCV64Word64AtomicStoreWord16)           \
  V(RISCV64Word64AtomicStoreWord32)           \
  V(RISCV64Word64AtomicStoreWord64)           \
  V(RISCV64Word64AtomicAddUint8)              \
  V(RISCV64Word64AtomicAddUint16)             \
  V(RISCV64Word64AtomicAddUint32)             \
  V(RISCV64Word64AtomicAddUint64)             \
  V(RISCV64Word64AtomicSubUint8)              \
  V(RISCV64Word64AtomicSubUint16)             \
  V(RISCV64Word64AtomicSubUint32)             \
  V(RISCV64Word64AtomicSubUint64)             \
  V(RISCV64Word64AtomicAndUint8)              \
  V(RISCV64Word64AtomicAndUint16)             \
  V(RISCV64Word64AtomicAndUint32)             \
  V(RISCV64Word64AtomicAndUint64)             \
  V(RISCV64Word64AtomicOrUint8)               \
  V(RISCV64Word64AtomicOrUint16)              \
  V(RISCV64Word64AtomicOrUint32)              \
  V(RISCV64Word64AtomicOrUint64)              \
  V(RISCV64Word64AtomicXorUint8)              \
  V(RISCV64Word64AtomicXorUint16)             \
  V(RISCV64Word64AtomicXorUint32)             \
  V(RISCV64Word64AtomicXorUint64)             \
  V(RISCV64Word64AtomicExchangeUint8)         \
  V(RISCV64Word64AtomicExchangeUint16)        \
  V(RISCV64Word64AtomicExchangeUint32)        \
  V(RISCV64Word64AtomicExchangeUint64)        \
  V(RISCV64Word64AtomicCompareExchangeUint8)  \
  V(RISCV64Word64AtomicCompareExchangeUint16) \
  V(RISCV64Word64AtomicCompareExchangeUint32) \
  V(RISCV64Word64AtomicCompareExchangeUint64)

// Addressing modes represent the "shape" of inputs to an instruction.
// Many instructions support multiple addressing modes. Addressing modes
// are encoded into the InstructionCode of the instruction and tell the
// code generator after register allocation which assembler method to call.
//
// We use the following local notation for addressing modes:
//

// R = register
// O = register or stack slot
// D = double register
// I = immediate (handle, external, int32)
// MRI = [register + immediate]
// MRR = [register + register]
// TODO(plind): Add the new r6 address modes.
#define TARGET_ADDRESSING_MODE_LIST(V) V(MRI) /* [%r0 + K] */

}  // namespace compiler
}  // namespace internal
}  // namespace v8

#endif  // V8_COMPILER_BACKEND_RISCV64_INSTRUCTION_CODES_RISCV64_H_
